name: Build, push, and deploy

on: [push]

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/${{ github.repository }}/modiapersonoversikt-api:${{ github.sha }}
  CI: true
  TZ: Europe/Oslo
  Q1_TEST_BRANCH: 'refs/heads/fix/spring-version'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
      - uses: nbadal/action-ktlint-setup@v1
        with:
          ktlint_version: '0.47.1'
      - name: Ktlint
        run: bash ./linting.sh
      - name: Build using maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -P ci -B test --settings .github/maven-settings.xml
      - name: Publish Dev Image
        if: github.ref == 'refs/heads/dev' || github.ref == env.Q1_TEST_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -P ci -B package --settings .github/maven-settings.xml -DskipTests
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker build --tag ${IMAGE} --build-arg image_version=17 .
          docker push ${IMAGE}
      - name: Publish Prod image
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -P ci -B package --settings .github/maven-settings.xml -DskipTests
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}
      - name: Deploy to Q1 (Test branch)
        uses: nais/deploy/actions/deploy@v1
        if: github.ref == env.Q1_TEST_BRANCH
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/nais-q1.yml
          VAR: version=${{ github.sha }}
  deploy-qa:
    name: Deploy to preprod
    needs: build
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        namespace: [q0, q1]
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/nais-${{ matrix.namespace }}.yml
          VAR: version=${{ github.sha }}

  deploy-prod:
    name: Deploy to prod
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: prod-fss
          RESOURCE: .nais/nais.yml
          VAR: version=${{ github.sha }}
